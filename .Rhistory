esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
D <- rexp(1, rate = lambda)
FT <- pweibull(T, shape = beta, scale = alpha)
print(FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
D <- rexp(1, rate = lambda)
FT <- pweibull(T, shape = beta, scale = alpha)
print(FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
D <- rexp(1, rate = lambda)
FT <- pweibull(T, shape = beta, scale = alpha)
print(FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
D <- rexp(1, rate = lambda)
FT <- pweibull(T, shape = beta, scale = alpha)
print(FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
FT <- pweibull(T, shape = beta, scale = alpha)
print(FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
S <- S +mean(list_traj)
}
print(S/100)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:100) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/100)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
mean(list_traj)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
S <- 0
for (p in 1:10000) {
list_traj <- c()
for (i in 1:1000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
S <- S + mean(list_traj)
}
print(S/10000)
S <- 0
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/10000)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
esp_Tf <- alpha * gamma(1 + 1/beta)
esp_D <- 1/lambda
FT <- pweibull(T, shape = beta, scale = alpha)
S <- 0
for (p in 1:1000) {
list_traj <- c()
for (i in 1:1000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= T) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
S <- S + mean(list_traj)
}
print(S/1000)
S <- 0
for (p in 1:1000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
print(S/1000)
sec_T <- seq(1,500,1)
res_A <- seq(1,500,1)
res_B <- seq(1,500,1)
for (t in sec_T) {
list_traj <- c()
for (i in 1:10000) {
Tf <- rweibull(1, shape = beta, scale = alpha)
D <- rexp(1, rate = lambda)
if (Tf <= t) {
list_traj <- c(list_traj, cc + D * ci)
} else {
list_traj <- c(list_traj, cc + tp * ci)
}
}
res_A[t] <- mean(list_traj)
S <- 0
FT <- pweibull(t, shape = beta, scale = alpha)
for (p in 1:10000) {
D <- rexp(1, rate = lambda)
S <- S + (FT * (cc + D * ci) + (1-FT) * (cc + tp * ci))
}
res_B[t] <- S/10000
}
ggplot() +
geom_line(aes(x = sec_T, y = res_A)) +
geom_line(aes(x = sec_T, y = res_B))
ggplot() +
geom_line(aes(x = sec_T, y = res_A, color = "Par simulation")) +
geom_line(aes(x = sec_T, y = res_B, color = "Analytique")) +
labs(x = "Valeur T : temps avant inspection",
y = "CoÃ»t total CCr",
title = "Comparaison de l'Ã©volution de l'espÃ©rance de CCr en fonction
de T") +
scale_color_manual(name = "Mode de calcul",
values = c("Par simulation" = "blue",
"Analytique" = "red")) +
custom_theme
ggplot() +
geom_line(aes(x = sec_T, y = res_A, color = "Par simulation")) +
geom_line(aes(x = sec_T, y = res_B, color = "Analytique")) +
labs(x = "Valeur T : temps avant inspection",
y = "CoÃ»t total CCr",
title = "Comparaison de l'Ã©volution de CCr en fonction
de T") +
scale_color_manual(name = "Mode de calcul",
values = c("Par simulation" = "blue",
"Analytique" = "red")) +
custom_theme
30 + 20 * (1/lambda)
?? int
?? integral
f <- function(x){return(x)}
integrate(f, lower = 0, upper = 2)
integrate(dexp(, rate = 0.5), lower = 0)
f <- function(x){return(dexp(x, rate = 0.5))}
integrate(f, lower = 0)
integrate(f, lower = 0, 1000000)
integrate(f, lower = 0, 100)
integrate(f, lower = 0, 1000)
integrate(f, lower = 0, 10000)
integrate(f, lower = 0, 100000)
integrate(f, lower = 0, 10000)
integrate(f, lower = 0, 100)
integrate(f, lower = 0, 10)
integrate(f, lower = 0, 100)
h <- 300
integrate(f, lower = 0, upper = T)
alpha <- 225.61302
beta <- 3.5031918
lambda <- 0.01405405
T <- 400
tp <- 10
cc <- 30
ci <- 20
h <- 300
f <- function(l) {
return(pexp(h-l, rate = lambda) * pweibull(l, scale = alpha, shape = beta))
}
integrate(f, lower = 0, upper = T)
